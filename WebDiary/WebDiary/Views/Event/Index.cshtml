@using System.Security.Claims;
@model WebDiary.Models.EventViewModel

@* <style type="text/css">
    .card {
        box-shadow: 0 0.15rem 1.75rem 0 rgb(33 40 50 / 15%);
    }
</style> *@
@{
    ViewData["Title"] = "Event Calendar";
}

@section scripts {
    <script>
        let someCalendar = null;
        let withGroups = false;
        let withoutGroups = false;
        let isDone = false;

        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                nowIndicator: true,
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title', // 'addEventButton',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'
                },
                footerToolbar: {
                    start: 'AllEventsButton MyEventsButton GroupEventsButton ActiveEventsButton',
                    center: '',
                    end: 'prev,next'
                },
                navLinks: true,
                editable: true, //moving events
                selectable: true,
                selectMirror: true,
                forceEventDuration: true,
                droppable: true,
                dayMaxEvents: true,
                weekNumbers: true,
                eventTimeFormat: { // like '14:30'
                    hour: '2-digit',
                    minute: '2-digit',
                    meridiem: true //am pm
                },
                customButtons: {
                    AllEventsButton: {
                        text: 'All events',
                        click: function (info) {
                            //without filters
                            $('.fc_with_group').toggle(true);
                            $('.fc_without_group').toggle(true);
                            $('.fc_is_done').toggle(true);
                        }
                    },
                    MyEventsButton: {
                        text: 'My events',
                        click: function () {
                            //groupId == null
                            if ($('.fc_with_group').css('display') !== 'none') {
                                $('.fc_with_group').toggle(false);
                                withGroups = true;
                            }
                            else {
                                withGroups = false;
                                $('.fc_with_group').toggle(true)
                            }
                            //$('.fc_with_group').slideToggle()
                        }
                    },
                    GroupEventsButton: {
                        text: 'Group events',
                        click: function () {
                            //groupId != null
                            if ($('.fc_without_group').css('display') !== 'none') {
                                $('.fc_without_group').toggle(false)
                            }
                            else {
                                $('.fc_without_group').toggle(true)
                            }
                        }
                    },
                    ActiveEventsButton: {
                        text: 'Active events',
                        click: function () {
                            //without 'isdone'
                            if ($('.fc_is_done').css('display') !== 'none') {
                                $('.fc_is_done').toggle(false)
                            }
                            else {
                                $('.fc_is_done').toggle(true)
                            }
                        }
                    }
                },
                events: '/Event/LoadEvents',
                
                eventClick: function (info) {
                    info.jsEvent.preventDefault(); // don't let the browser navigate
                    GetEventDetails(info.event.id);
                    
                    if (info.event.url) { // open in another tab
                        window.open(info.event.url);
                    }
                },
                eventClassNames: function (arg) {
                    let isDone = arg.event.extendedProps.isDone ? "fc_is_done" : "fc_is_not_done";
                    let isGroup = arg.event.extendedProps.groupIdentificator ? "fc_with_group" : "fc_without_group";
                    return [isDone, isGroup];
                },
                dateClick: function (date, allDay, jsEvent, view) {
                    var start_date = moment(date.dateStr).format('YYYY-MM-DDTHH:mm');
                    ShowEventEmptyModal(start_date);
                },

                eventDidMount: function (info) {
                    if (info.event.extendedProps.description) { //for gridViews when creating event
                        $(info.el).tooltip({ //bootstrap tooltip
                            title: info.event.extendedProps.description,
                        });
                    }
                    
                    var gid = info.event.extendedProps.groupIdentificator
                    if (gid !== null) {
                        $(info.el).css("border-style", "dotted");
                        $(info.el).css("border-color", info.event.backgroundColor);
                        $(info.el).css("border-width", "2px");
                        $(info.el).css("border-radius", "15px 15px 15px 15px"); //"0px 15px 15px 0px"
                    }
                },
                eventWillUnmount: function (info) {
                    $(info.el).tooltip('dispose');
                },
                eventDrop: function (info) {
                    var eventdto =
                    {
                        id: info.event.id,
                        userId: info.event.extendedProps.userId,
                        groupIdentificator: info.event.extendedProps.groupIdentificator,
                        title: info.event.title,
                        description: info.event.extendedProps.description,
                        start: moment(info.event.start).format('YYYY-MM-DDTHH:mm'),
                        end: moment(info.event.end).format('YYYY-MM-DDTHH:mm'),
                        allDay: info.event.allDay,
                        url: info.event.url,
                        backgroundColor: info.event.backgroundColor,
                        donedAt: info.event.extendedProps.donedAt,
                        donedByEmail: info.event.extendedProps.donedByEmail,
                        donedById: info.event.extendedProps.donedById,
                        isDone: info.event.extendedProps.isDone
                    };
                    $.ajax({
                        url: '/Event/UpdateEvent',
                        data: JSON.stringify(eventdto),
                        type: "POST",
                        contentType: "application/json;charset=utf-8",
                        success: function (result) {
                            console.log("OK");
                        },
                        error: function (errormessage) {
                            alert(errormessage.responseText);
                            info.revert();
                        }
                    }); 
                },
                eventResize: function (info) {
                    var eventdto =
                    {
                        id: info.event.id,
                        userId: info.event.extendedProps.userId,
                        groupIdentificator: info.event.extendedProps.groupIdentificator,
                        title: info.event.title,
                        description: info.event.extendedProps.description,
                        start: moment(info.event.start).format('YYYY-MM-DDTHH:mm'),
                        end: moment(info.event.end).format('YYYY-MM-DDTHH:mm'),
                        allDay: info.event.allDay,
                        url: info.event.url,
                        backgroundColor: info.event.backgroundColor,
                        donedAt: info.event.extendedProps.donedAt,
                        donedByEmail: info.event.extendedProps.donedByEmail,
                        donedById: info.event.extendedProps.donedById,
                        isDone: info.event.extendedProps.isDone
                    };
                    $.ajax({
                        url: '/Event/UpdateEvent',
                        data: JSON.stringify(eventdto),
                        type: "POST",
                        contentType: "application/json;charset=utf-8",
                        success: function (result) {
                            console.log("OK");
                        },
                        error: function (errormessage) {
                            alert(errormessage.responseText);
                            info.revert();
                        }
                    });
                }
            });
            calendar.render();
            someCalendar = calendar;
        });

        $('#btnClose').click(function () {
            $('#schedule').modal('hide');
        });

        //onclick does not honor html5 validation
        $("#btnSave").click(function (event) {
            if ($("#Title")[0].checkValidity() && $("#Start")[0].checkValidity() &&
                $("#End")[0].checkValidity() && $("#Description")[0].checkValidity() &&
                $("#BackgroundColor")[0].checkValidity() && $("#Url")[0].checkValidity()) {
                Add(event);
            }
            else {
                return 0;
            }
        });

        $("#btnEdit").click(function (event) {
            if ($("#Title")[0].checkValidity() && $("#Start")[0].checkValidity() &&
                $("#End")[0].checkValidity() && $("#Description")[0].checkValidity() &&
                $("#BackgroundColor")[0].checkValidity() && $("#Url")[0].checkValidity()) {
                Update(event);
            }
            else {
                return 0;
            }
        });

        // $('#refresh').on('click', function () {
        //     $("#calendar").refetchEvents();
        // });


        function ClearEventModal() {
            $('#Title').val("");
            $('#Description').val("");
            $('#Start').val("");
            $('#End').val("");
            $('#Url').val("");
            document.getElementById("DoneUser").innerHTML = "";
            document.getElementById("DoneTime").innerHTML = "";
            document.getElementById("DoneUserBy").innerHTML = "";
            document.getElementById("DoneTimeAt").innerHTML = "";
            $('#AllDay').prop('checked', false);
            $('#Completed').prop('checked', false);
            $('input:radio[name=BackgroundColor]').each(function () { $(this).prop('checked', false); });
            $('#schedule').children('.modal-dialog').children('.modal-content').find('.Group').val("null");
        }

        function ShowEventEmptyModal(sendDate) {
            ClearEventModal();
            $('#Start').val(sendDate);
            $('#End').val(sendDate);
            $('#schedule :input').prop('disabled', false);
            $('#schedule').modal('show');
            $("#show-event-comments-partial").html("");
            $("#create-comment-section-partial").html("");
            $('#btnSave').show();
            $('#btnEdit').hide();
            $('#btnDelete').hide();
            $('#Completed').hide();
            $('#completed').hide();
            $('#Title').focus();
        }

        function ShowEventFulledModal(res) {
            ClearEventModal();
            var groupVal = $('#schedule').children('.modal-dialog').children('.modal-content').find('.Group');
            
            $('#Id').val(res.id);
            $('#Title').val(res.title);
            if (res.isDone !== false) {
                var donetime = moment(res.donedAt).format('HH:mm YYYY-MM-DD');
                document.getElementById("DoneUserBy").innerHTML = "by ";
                document.getElementById("DoneTimeAt").innerHTML = "at ";
                document.getElementById("DoneUser").innerHTML = res.donedByEmail;
                document.getElementById("DoneTime").innerHTML = donetime;
            }
            res.groupIdentificator == null ? groupVal.val("null") : groupVal.val(res.groupIdentificator)

            $('#DoneId').val(res.donedById);
            $('#UserId').val(res.userId);
            $('#Description').val(res.description);
            $('#Start').val(res.start);
            $('#End').val(res.end);
            $('#Url').val(res.url);
            $('#AllDay').prop('checked', res.allDay);
            $('#Completed').prop('checked', res.isDone);
            $('input:radio[name=BackgroundColor]').each(function () {
                $(this).val() == res.backgroundColor ? $(this).prop('checked', true) : $(this).prop('checked', false)
            });
            if (res.userId != '@User.FindFirstValue(ClaimTypes.NameIdentifier)') {
                $('#schedule :input').prop('disabled', true);
                $('#btnEdit').hide();
                $('#btnDelete').hide();
                $('#btnClose').prop('disabled', false);
                $('#Completed').prop('disabled', false);
            }
            else {
                $('#btnEdit').show();
                $('#btnDelete').show();
                $('#schedule :input').prop('disabled', false);
                $('#btnClose').prop('disabled', false);
            };
            $('#schedule').modal('show');
            $('#btnSave').hide();
            $('#Title').focus();
            $('#Completed').show();
            $('#completed').show();
        }

        function ShowEventComments(id) {
            $.ajax({
                type: "GET",
                url: "/Comment/ShowEventCommentsPartial",
                data: { id: id },
                dataType: 'html',
                success: function (data) {
                    $('#show-event-comments-partial').html(data);
                    $('#EventId').val(id);
                }
            });
        }

        function CreateComment(id) {
            $.ajax({
                type: "GET",
                url: "/Comment/CreateCommentPartial",
                dataType: 'html',
                success: function (data) {
                    $('#create-comment-section-partial').html(data);
                    $('#EventId').val(id);
                }
            });
        }

        function GetEventDetails(id) {
            return $.ajax({
                dataType: 'json',
                type: "GET",
                url: "/Event/GetEvent",
                data: { id: id },
                async: false,
                success: function (res) {
                    ShowEventFulledModal(res);
                    ShowEventComments(id);
                    CreateComment(id);
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                    someCalendar.refetchEvents();
                }
            });
        }

        function isNullOrWhitespace(input) {
            return !input || !input.trim();
        }

        function Add(event) {
            event.preventDefault();
            var groupVal = $('#schedule').children('.modal-dialog').children('.modal-content').find('.Group').val();

            if (isNullOrWhitespace($('#Title').val()))
                return alert("Please, write not whitespace event title");

            var eventdto =
            { 
                userId: '@User.FindFirstValue(ClaimTypes.NameIdentifier)',
                groupIdentificator: groupVal === "null" ? null : groupVal,
                title: $('#Title').val(),
                description: $('#Description').val(),
                start: $('#Start').val(),
                end: $('#End').val(),
                allDay: $('#AllDay').is(':checked'),
                url: $('#Url').val(),
                backgroundColor: $('input[name="BackgroundColor"]:checked').val(),
            };

            $.ajax({
                url: "/Event/CreateEvent",
                data: JSON.stringify(eventdto),
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    alert(result);
                    $('#schedule').modal('hide');
                    someCalendar.refetchEvents();
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        }

        function Update(event) {
            event.preventDefault();
            var groupVal = $('#schedule').children('.modal-dialog').children('.modal-content').find('.Group').val();

            if (isNullOrWhitespace($('#Title').val()))
                return alert("Please, write not whitespace event title");

            var eventdto =
            {
                userId: $('#UserId').val(),
                id: $('#Id').val(),
                isDone: $('#Completed').is(':checked'),
                title: $('#Title').val(),
                description: $('#Description').val(),
                start: $('#Start').val(),
                end: $('#End').val(),
                allDay: $('#AllDay').is(':checked'),
                url: $('#Url').val(),
                backgroundColor: $('input[name="BackgroundColor"]:checked').val(),
                donedById: $('#DoneId').val() === "" ? null : $('#DoneId').val(),
                donedAt: $('#DoneTime').text() === "" ? null : moment($('#DoneTime').text()).format('YYYY-MM-DDTHH:mm'),
                donedBy: $('#DoneUser').text() === "" ? null : $('#DoneUser').text(),
                groupIdentificator: groupVal === "null" ? null : groupVal
            };

            $.ajax({
                url: "/Event/UpdateEvent",
                data: JSON.stringify(eventdto),
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    alert(result);
                    someCalendar.refetchEvents();
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        }

        function Delete(event) {
            event.preventDefault();

            const result = confirm('Are you sure to delete event "' + $('#Title').val() + '" ?');
            if (result) {
                var eventId = $('#Id').val();
                $.ajax({
                    url: "/Event/DeleteEvent",
                    data: JSON.stringify(eventId),
                    type: "POST",
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        alert(result);
                        $('#schedule').modal('hide');
                        someCalendar.refetchEvents();
                    },
                    error: function (errormessage) {
                        alert(errormessage.responseText);
                        someCalendar.refetchEvents();
                    }
                });
            } else {
                alert("Event is not deleted!");
            }
        }
    </script>
}
<div id='calendar'></div>

<div class="modal fade" id="schedule">
    <div class="modal-dialog">
        <div class="modal-content">
            <form>
                <div class="modal-header">
                    <h4 class="modal-title">
                        Your Schedule
                    </h4>
                    <div class="form-group">
                        <label for="Completed" id="completed"><b>Done</b></label>
                        <input type="checkbox" id="Completed">

                        <small class="c-badge">
                            <input type="hidden" class="form-control" id="DoneId">
                            <h6>
                                <span id="DoneUserBy"></span><span id="DoneUser"></span>
                                <span id="DoneTimeAt"></span><span id="DoneTime"></span>
                            </h6>
                        </small>
                    </div>
                </div>
                <div class="modal-body">
                    <input type="hidden" class="form-control" id="Id">
                    <input type="hidden" class="form-control" id="UserId">
                    <div class="form-group">
                        <label for="Title"><b>Title</b></label>
                        <input type="text" class="form-control" id="Title" required> @* placeholder="Feed the cat" *@
                    </div>
                    <div class="form-group">
                        <label for="Start">Start</label>
                        <input type="datetime-local" class="form-control" id="Start" required>
                    </div>
                    <div class="form-group">
                        <label for="End">End</label>
                        <input type="datetime-local" class="form-control" id="End" required>
                    </div>
                    <div class="form-group">
                        <label for="Description">Description</label>
                        <input type="text" class="form-control" id="Description"> @*maxlength placeholder="Food with salmon, not tomatoes"*@
                    </div>
                    <div class="form-group">
                        <label for="AllDay">All day</label>
                        <input type="checkbox" id="AllDay"> <label>Yes</label>
                    </div>
                    <div class="form-group">
                        <label for="Url">Url</label>
                        <input type="URL" class="form-control" id="Url" placeholder="http[s]://url.com"> @* placeholder="https://food-for-every-cat.com" *@
                    </div>
                    <div class="form-group">
                        <label for="BackgroundColor"><b>Priority</b></label>
                        <input type="radio" id="BackgroundColor" name="BackgroundColor" value="#a895e2"> <label>High</label>
                        <input type="radio" id="BackgroundColor" name="BackgroundColor" value="#5fbe7d" required> <label>Normal</label>
                        <input type="radio" id="BackgroundColor" name="BackgroundColor" value="#69b1ff"> <label>Low</label>
                        <input type="radio" id="BackgroundColor" name="BackgroundColor" value="#505149" style="display:none" />
                    </div>

                    @*group select here*@
                    <script>
                        $(document).ready(function () {
                            $('.group-selector-partial').load('/Group/ShowUserGroupsDropDownPartial');
                        });
                    </script>
                    <div class="group-selector-partial"> </div>

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-danger" id="btnDelete" formnovalidate="formnovalidate" onclick="return Delete(event);">Delete event</button>  @*//formnovalidate?*@
                    <button type="submit" class="btn btn-success" id="btnSave">Create</button>
                    <button type="submit" class="btn btn-success" id="btnEdit">Save</button>
                    <button type="button" class="btn btn-danger" data-dismiss="modal" id="btnClose">Close</button>
                </div>
            </form>

            @*comment section here*@
            <div id="show-event-comments-partial"> </div>
            <div id="create-comment-section-partial"> </div>
        </div>
    </div>
</div>