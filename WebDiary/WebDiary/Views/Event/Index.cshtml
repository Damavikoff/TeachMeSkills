@using System.Security.Claims;
@model WebDiary.Models.EventViewModel

@{
    ViewData["Title"] = "Event Calendar";
}

@section scripts{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                nowIndicator: true,
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title', // 'addEventButton',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'
                },
                navLinks: true, 
                editable: true,
                selectable: true,
                selectMirror: true,
                droppable: true,
                dayMaxEvents: true,
                weekNumbers: true,
                eventTimeFormat: { // like '14:30'
                    hour: '2-digit',
                    minute: '2-digit',
                    meridiem: true //am pm
                },

                events: {
                    url: '/Event/LoadEvents',
                    method: 'GET',
                    extraParams: {
                        custom_param1: 'something',
                        custom_param2: 'somethingelse'
                    },
                    success: function(res) {
                        //debugger;
                        console.log(res.Message);
                    },
                    failure: function () {
                        alert('There was an error while fetching events!'); //error message from controller
                    }
                },

                eventClick: function(info) {
                    info.jsEvent.preventDefault(); // don't let the browser navigate

                    var resp = GetEventDetails(info.event.id);
                    if (typeof resp.responseJSON === 'object' || resp.responseJSON instanceof Object) { //мне не нравится вся эта проверка на стороне клиента, и как в js методах работает тоже, надо поправить
                        ShowEventFulledModal(resp.responseJSON);
                    }

                    ShowEventComments(info.event.id);
                    CreateComment(info.event.id);

                    if (info.event.url) { // open in another tab
                        window.open(info.event.url);
                    }
                },

                dateClick: function (date, allDay, jsEvent, view) {
                    var start_date = moment(date.dateStr).format('YYYY-MM-DDTHH:mm');
                    ShowEventEmptyModal(start_date);
                },

                eventDidMount: function (info) {
                    $(info.el).tooltip({ //bootstrap tooltip
                        title: info.event.extendedProps.description,
                    });

                },
                eventWillUnmount: function (info) {
                    $(info.el).tooltip('dispose');
                }
            });
            calendar.render();
        });

        $('#btnClose').click(function () {
            $('#schedule').modal('hide');
        });

        //onclick does not honor html5 validation
        $("#btnSave").click(function () {
            if ($("#Title")[0].checkValidity() && $("#Start")[0].checkValidity() && 
                $("#End")[0].checkValidity() && $("#Description")[0].checkValidity() &&
                $("#BackgroundColor")[0].checkValidity() && $("#Url")[0].checkValidity()) {
                Add();
            }
            else {
                return 0;
            }
        });

        $("#btnEdit").click(function () {
            if ($("#Title")[0].checkValidity() && $("#Start")[0].checkValidity() &&
                $("#End")[0].checkValidity() && $("#Description")[0].checkValidity() &&
                $("#BackgroundColor")[0].checkValidity() && $("#Url")[0].checkValidity()) {
                Update();
            }
            else {
                return 0;
            }
        });

        function ClearEventModal() {
            //clear forms after closing
            $('#Title').val("");
            $('#Description').val("");
            $('#Start').val("");
            $('#End').val("");
            $('#Url').val("");
            $('#AllDay').prop('checked', false);
            $('input:radio[name=BackgroundColor]').each(function () { $(this).prop('checked', false); });
            document.getElementById('Group').disabled = false;
            $('#Group').val("null");
        }

        function ShowEventEmptyModal(sendDate) {
            ClearEventModal();
            $('#Start').val(sendDate);
            $('#End').val(sendDate);  //value="2020-03-13T18:22" seconds from number of month
            $('#schedule :input').prop('disabled', false);
            //$('#btnClose').prop('disabled', false);
            $('#schedule').modal('show');
            $('#btnSave').show();
            $('#btnEdit').hide();
            $('#Completed').hide();
            $('#completed').hide();
            $('#Title').focus();
        }
        
        function ShowEventFulledModal(res) {
            ClearEventModal();
            $('#Id').val(res.id);
            $('#Title').val(res.title);
            if (res.groupId == null) {
                $('#Group').val("null");
            } else {
                $('#Group').val(res.groupId);
            }
            $('#UserId').val(res.userId);
            $('#Description').val(res.description);
            $('#Start').val(res.start);
            $('#End').val(res.end);
            $('#Url').val(res.url);
            $('#AllDay').prop('checked', res.allDay);
            $('input:radio[name=BackgroundColor]').each(function () {
                if($(this).val() == res.backgroundColor) {
                    $(this).prop('checked', true);
                } else {
                    $(this).prop('checked', false);
                }
            });
            if (res.userId != '@User.FindFirstValue(ClaimTypes.NameIdentifier)') {
                // $('#btnSave').hide();
                // $('#btnEdit').hide();
                // $('#btnDelete').hide();
                $('#schedule :input').prop('disabled', true);
                $('#btnClose').prop('disabled', false);
            }
            else {
                $('#schedule :input').prop('disabled', false);
                $('#btnClose').prop('disabled', false);
                document.getElementById('Group').disabled = false;
            };
            $('#schedule').modal('show');
            
            $('#btnEdit').show();
            $('#btnSave').hide();
            $('#Title').focus();
            $('#Completed').show();
            $('#completed').show();
        }

        function ShowEventComments(id) {
             $.ajax({
                type: "GET",
                url: "/Comment/ShowEventCommentsPartial",
                data: { id: id },
                dataType: 'html',
                success: function (data) {
                    console.log('Success');
                    $('#show-event-comments-partial').html(data);
                    $('#EventId').val(id);
                }
            });
        }

        function CreateComment(id) {
            $.ajax({
                type: "GET",
                url: "/Comment/CreateCommentPartial",
                dataType: 'html',
                success: function (data) {
                    console.log('Success');
                    $('#create-comment-section-partial').html(data);
                }
            });
        }

        function GetEventDetails(id) {
            return $.ajax({
                dataType: 'json',
                type: "GET",
                url: "/Event/GetEvent",
                data: { id: id },
                async: false,
                success: function (res) {
                    if (typeof res === 'string' || res instanceof String) {
                        alert(res);
                    }
                },
                false: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        }

        function Add() {
            var eventdto =
            {
                userId: '@User.FindFirstValue(ClaimTypes.NameIdentifier)',
                groupId: $('#Group').val(),
                title: $('#Title').val(),
                description: $('#Description').val(),
                start: $('#Start').val(),
                end: $('#End').val(),
                allDay: $('#AllDay').is(':checked'),
                url: $('#Url').val(),
                backgroundColor: $('input[name="BackgroundColor"]:checked').val(),
            };
            
            if ($('#Group').val()=="null") {
                eventdto.groupId = null;
            };


            $.ajax({
                url: "/Event/CreateEvent",
                data: JSON.stringify(eventdto),
                type: "POST",
                async: false, //запрос делается асинхронно и когда приходит ответ на запрос - сама функция уже закончила свое выполнение
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    $('#schedule').modal('hide');
                    alert(result);
                    $('#calendar').fullCalendar('refetchEvents');
                },
                error: function (errormessage) {
                    //var data = errormessage.responseJSON;
                    //var jsonData = JSON.parse(JSON.stringify(data));
                    //console.log(jsonData);
                    console.log(errormessage.responseJSON.Start[0]);
                    //for (n1 in data) {
                    //    console.log(n1);
                    //}
                    alert(errormessage.responseText);
                }
            });
        }

        function Delete() {
            const result = confirm('Are you sure to delete event "' + $('#Title').val() + '" ?');
            if (result) {
                var eventId = $('#Id').val();
                $.ajax({
                    url: "/Event/DeleteEvent",
                    data: JSON.stringify(eventId),
                    type: "POST",
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (result) { //why it is not working from the first time? if i waiting for success
                        $('#schedule').modal('hide');
                        alert(result);
                        $('#calendar').fullCalendar('refetchEvents');
                    },
                    error: function (errormessage) {
                        alert(errormessage.responseText);
                    }
                });
            } else {
                alert("Event is not deleted!");
            }
        }

        function Update() {
            var eventdto =
            {
                userId: $('#UserId').val(),
                groupId: $('#Group').val(),
                id: $('#Id').val(),
                title: $('#Title').val(),
                description: $('#Description').val(),
                start: $('#Start').val(),
                end: $('#End').val(),
                allDay: $('#AllDay').is(':checked'),
                url: $('#Url').val(),
                backgroundColor: $('input[name="BackgroundColor"]:checked').val()
            };
            if ($('#Group').val() == "null") {
                eventdto.groupId = null;
            };
            $.ajax({
                url: "/Event/UpdateEvent",
                data: JSON.stringify(eventdto),
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    $('#schedule').modal('hide');
                    alert(result);
                    $('#calendar').fullCalendar('refetchEvents');
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        }
    </script>
}

<div id='calendar'></div>

<div class="modal fade" id="schedule">
    <div class="modal-dialog">
        <div class="modal-content">
            <form>
                <div class="modal-header">
                 <h4 class="modal-title">Your Schedule</h4>
                    <div class="form-group">
                        <label for="Completed" id="completed"><b>Done</b></label>
                        <input type="checkbox" id="Completed">
                    </div>
                </div>
                <div class="modal-body">
                    <input type="hidden" class="form-control" id="Id">
                    <input type="hidden" class="form-control" id="UserId">
                    <div class="form-group">
                        <label for="Title"><b>Title</b></label>
                         <input type="text" class="form-control" id="Title" placeholder="Feed the cat" required>
                    </div>
                    <div class="form-group">
                        <label for="Start"><i>Start</i></label>
                        <input type="datetime-local" class="form-control" id="Start" required>
                    </div>
                    <div class="form-group">
                         <label for="End">End</label>
                             <input type="datetime-local" class="form-control" id="End" required>
                    </div>
                    <div class="form-group">
                         <label for="Description">Description</label>
                         <input type="text" class="form-control" id="Description" placeholder="Food with salmon, not tomatoes"> @*maxlength*@
                    </div>
                    <div class="form-group">
                         <label for="AllDay">All day</label>
                             <input type="checkbox" id="AllDay"> <label>Yes</label>
                    </div>
                    <div class="form-group">
                         <label for="Url">Url</label>
                         <input type="URL" class="form-control" id="Url" placeholder="https://food-for-every-cat.com">
                    </div>
                    <div class="form-group">
                         <label for="BackgroundColor">Priority</label>
                             <input type="radio" id="BackgroundColor" name="BackgroundColor" value="#a895e2"> <label>High</label>
                             <input type="radio" id="BackgroundColor" name="BackgroundColor" value="#5fbe7d" required> <label>Normal</label>
                             <input type="radio" id="BackgroundColor" name="BackgroundColor" value="#69b1ff"> <label>Low</label>
                    </div>
                    <script>
                        $(document).ready(function () {
                            $('#group-selector-partial').load('/Event/ShowUserGroupsDropDownPartial');
                        });
                    </script>
                <div id="group-selector-partial"></div>
                </div>
                <div class="modal-footer">
                     <button type="submit" class="btn btn-danger" id="btnDelete" formnovalidate="formnovalidate" onclick="return Delete();">Delete event</button>  @*//formnovalidate?*@
                     <button type="submit" class="btn btn-success" id="btnSave">Create</button>
                     <button type="submit" class="btn btn-success" id="btnEdit">Save</button>
                     <button type="button" class="btn btn-danger" data-dismiss="modal" id="btnClose">Close</button>
                </div>
            </form>

            <div id="show-event-comments-partial"> 
                @{
                    Html.RenderPartial("ShowEventCommentsPartial", new List<CommentViewModel>());
                }
            </div>
            <div id="create-comment-section-partial">
                @* @{
                    Html.RenderPartial("CreateCommentPartial", new CommentViewModel());
                } *@
            </div>
            @*comment section here*@
            

            @* @await Component.InvokeAsync("CommentComponent", new { eventId = "zxcvb", authUserId = @User.FindFirstValue(ClaimTypes.NameIdentifier) }) *@

            @* <script>
                $.ajax({
                    debugger;
                    var id = $('#Id').val();
                    // edit to add steve's suggestion.
                    //url: "/ControllerName/ActionName",
                    type: "GET",
                    url: "/Event/ShowEventCommentsPartial",
                    data: {id : id},
                    success: function (data) {
                        $("#someDiv").html(data);
                    }
                });
            </script> *@

            
        </div>
    </div>
</div>