@using System.Security.Claims;
@model List<GroupViewModel>
@{
    ViewBag.Title = "Friend list";
}

<style type="text/css">
    /* body{margin-top:20px;
            background-color:#f2f6fc;
            color:#69707a;
            } */
    .img-account-profile {
        height: 10rem;
    }

    .rounded-circle {
        border-radius: 50% !important;
    }

    .card {
        box-shadow: 0 0.15rem 1.75rem 0 rgb(33 40 50 / 15%);
    }

        .card .card-header {
            font-weight: 500;
        }

    .card-header:first-child {
        border-radius: 0.35rem 0.35rem 0 0;
    }

    .card-header {
        padding: 1rem 1.35rem;
        margin-bottom: 0;
        background-color: rgba(33, 40, 50, 0.03);
        border-bottom: 1px solid rgba(33, 40, 50, 0.125);
    }

    .form-control, .dataTable-input {
        display: block;
        width: 100%;
        padding: 0.875rem 1.125rem;
        font-size: 0.875rem;
        font-weight: 400;
        line-height: 1;
        color: #69707a;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #c5ccd6;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        border-radius: 0.35rem;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

    .nav-borders .nav-link.active {
        color: #0061f2;
        border-bottom-color: #0061f2;
    }

    .nav-borders .nav-link {
        color: #69707a;
        border-bottom-width: 0.125rem;
        border-bottom-style: solid;
        border-bottom-color: transparent;
        padding-top: 0.5rem;
        padding-bottom: 0.5rem;
        padding-left: 0;
        padding-right: 0;
        margin-left: 1rem;
        margin-right: 1rem;
    }

    .fa-2x {
        font-size: 2em;
    }

    .table-billing-history th, .table-billing-history td {
        padding-top: 0.75rem;
        padding-bottom: 0.75rem;
        padding-left: 1.375rem;
        padding-right: 1.375rem;
    }

    .table > :not(caption) > * > *, .dataTable-table > :not(caption) > * > * {
        padding: 0.75rem 0.75rem;
        background-color: var(--bs-table-bg);
        border-bottom-width: 1px;
        box-shadow: inset 0 0 0 9999px var(--bs-table-accent-bg);
    }

    .border-start-primary {
        border-left-color: #0061f2 !important;
    }

    .border-start-secondary {
        border-left-color: #6900c7 !important;
    }

    .border-start-success {
        border-left-color: #00ac69 !important;
    }

    .border-start-lg {
        border-left-width: 0.25rem !important;
    }

    .h-100 {
        height: 100% !important;
    }
</style>


<body>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.1/css/all.min.css" integrity="sha256-2XFplPlrFClt0bIdPgpz8H7ojnk10H69xRqd9+uTShA=" crossorigin="anonymous" />
    <div class="container-xl px-4 mt-4">

        <nav class="nav nav-borders">
            <a class="nav-link  ms-0" asp-controller="User" asp-action="Profile">Profile</a>
            <a class="nav-link" asp-controller="User" asp-action="Security">Security</a>
            <a class="nav-link" asp-controller="Friends" asp-action="Index">Friend list</a>
            <a class="nav-link active" asp-action="Index">Group list</a>
        </nav>
        <hr class="mt-0 mb-4">
        <div class="row">
            <div class="col-lg-4 mb-4">
                <div class="card h-100 border-start-lg border-start-primary">
                    <div class="card-body">
                        <div class="small text-muted">Invites</div>
                        <div class="h4">Group1, Group2, Group3, ...</div>
                        <a class="text-arrow-icon small" href="#!">
                            Look
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-arrow-right"><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg>
                        </a>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 mb-4">
                <div class="card h-100 border-start-lg border-start-secondary">
                    <div class="card-body">
                        <div class="small text-muted">Invites dark</div>
                        <div class="h4">no invites yet</div>
                        @* <a class="text-arrow-icon small text-secondary" href="#!">
                        Look
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-arrow-right"><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg>
                        </a> *@
                    </div>
                </div>
            </div>

        </div>

        <div class="card card-header-actions mb-4">
            <div class="card-header">
                Groups@* <button class="btn btn-sm btn-primary" type="button"> or here add new? </button> *@
            </div>
            <div class="card-body px-0">
                @foreach (var group in Model)
                {
                    <div class="d-flex align-items-center justify-content-between px-4 groups">
                        <div class="d-flex align-items-center">
                            <i class="fab fa-cc-mastercard fa-2x cc-color-mastercard"></i>
                            <div class="ms-4">
                                <input type="hidden" class="form-control" class="groupId" value="@group.Id">
                                <div class="small group">@group.Name</div>
                                <div class="text-xs text-muted">Friends from 05/2022</div>
                            </div>
                        </div>
                        <div class="ms-4 small">
                            @* <a class="text-muted me-3" asp-controller="Group" asp-action="DeleteGroup2" asp-route-id="@group.Id">Delete</a> *@
                            <a class="groupDelete text-muted me-3" href="#!" onclick="DeleteGroup(event,$(this))">Delete</a>
                            <a class="groupEdit" href="#!" onclick="ShowEditGroupModal('@group.Id')">Edit</a>
                        </div>
                    </div>
                    @*after delete space for Undo action*@//
                    <hr>

                }
                @*  <div class="card-body text-right">
                <button class="btn btn-sm btn-primary" type="button" onclick="ShowAddGroupModal()">Create a new group (modal)</button>
                </div> *@
            </div>
            <div class="card-body text-right">
                <button class="btn btn-sm btn-primary" type="button" onclick="ShowAddGroupModal()">Create a new group</button>
            </div>


        </div>

        <div class="card mb-4">
            <div class="card-header">Groups History</div>
            <div class="card-body p-0">

                <div class="table-responsive table-billing-history">
                    <table class="table mb-0">
                        <thead>
                            <tr>
                                <th class="border-gray-200" scope="col">Username</th>
                                <th class="border-gray-200" scope="col">Group</th>
                                <th class="border-gray-200" scope="col">Date</th>
                                <th class="border-gray-200" scope="col">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>User1</td>
                                <td>Default</td>
                                <td>06/15/2021</td>
                                <td><span class="badge bg-success">Joined</span></td>
                            </tr>
                            <tr>
                                <td>User2</td>
                                <td>Default2</td>
                                <td>05/15/2021</td>
                                <td><span class="badge bg-danger">Leaved</span></td>
                            </tr>
                            <tr>
                                <td>User3</td>
                                <td>Default3</td>
                                <td>07/15/2021</td>
                                <td><span class="badge bg-danger">Kicked</span></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div id="manage-group-modal-partial"> </div>
    <script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // var groupToDelete;
        $(document).ready(function () {
            $.ajax({
                type: "GET",
                url: "/Group/ManageGroupPartial",
                dataType: 'html',
                success: function (data) {
                    $('#manage-group-modal-partial').html(data);
                }
            });
        });

        function ClearGroupModal() {
            arrUsersToAdd = [];
            $('#Name').val("");
            $('#GroupId').val("");
            $('#UserGroupId').val("");
            $('#myInput').val("");
            $('#users').empty();
        }

        function ShowAddGroupModal() {
            $('#title').text("Create group");
            //clear all props
            $('#ManageGroupModal :input').prop('disabled', false);
            $('#btnCloseAdd').prop('disabled', false);
            $('#btnEditGroup').hide();
            $('#btnDeleteGroup').hide();
            $('#btnSaveGroup').show();
            //clear all inputs
            ClearGroupModal();
            $('#ManageGroupModal').modal('show');
        }

        function ShowEditGroupModal(groupId) {
            ClearGroupModal();
            $('#title').text("Edit group");
            var select = GetGroup(groupId);
            $('#btnSaveGroup').hide();
            $('#ManageGroupModal').modal('show');

            var selectedGroup = select.responseJSON;

            //if auth user not the owner of choosen group
            if (selectedGroup.userId != '@User.FindFirstValue(ClaimTypes.NameIdentifier)') {
                //make inputs disable and hide buttons
                $('#btnEditGroup').hide();
                $('#btnDeleteGroup').hide();
                $('#Name').prop('disabled', true);
                $('#users').prop('disabled', true);/*  myInput */
                $('#myInput').prop('disabled', true);
            }
            //if auth user is the owner of choosen group
            else {
                //show all buttons for edit and enable the inputs
                $('#btnEditGroup').show();
                $('#btnDeleteGroup').show();
                $('#ManageGroupModal :input').prop('disabled', false);
                $('#btnCloseAdd').prop('disabled', false);
            };

            //fill the inputs by parameters of choosen group
            $('#Name').val(selectedGroup.name);
            $('#GroupId').val(selectedGroup.id);
            $('#UserGroupId').val(selectedGroup.userId);

            //if group with added users
            if (selectedGroup.users != null) {
                selectedGroup.users.forEach(function (element) {
                    //add added users in array
                    arrUsersToAdd.push(element);
                    if (element.id != '@User.FindFirstValue(ClaimTypes.NameIdentifier)') {
                        //show all users except of auth user
                        $('#users').append("<option value=" + element.id + " class=selUser>" + element.userName + "</option>");
                    }
                });
            }
        }

        function GetGroup(selectedGroupId) {
            return $.ajax({
                dataType: 'json',
                type: "GET",
                url: "/Group/GetGroup",
                async: false,
                data: { groupId: selectedGroupId },
                success: function (data) {
                }
            });
        }

        function DeleteGroup(event, obj) {
            // event.preventDefault();

            var groupId = obj
                .closest('.d-flex')
                .children('.d-flex')
                .children('.ms-4')
                .children().val();

            var groupName = obj
                .closest('.d-flex')
                .children('.d-flex')
                .children('.ms-4')
                .find('.small').text();

            var group = obj
                .closest('.d-flex');

            const result = confirm('Are you sure to delete group "' + groupName + '" ?');

            if (result) {
                $.ajax({
                    url: "/Group/DeleteGroup",
                    data: JSON.stringify(groupId),
                    type: "POST",
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        group.remove();
                    },
                    error: function (errormessage) {
                        alert(errormessage.responseText);
                    }
                });
            }
        }
    </script>
</body>
